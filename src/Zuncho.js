import React, { useRef, useEffect } from 'react'
import styled from 'styled-components'
import { gsap, Expo } from 'gsap'

const Outer = styled.div`
	position: fixed;
	width: 100%;
	height: 100%;
	justify-content: center;
	display: flex;
	align-items: center;
`
const Wrap = styled.div`
	width: 650px;
	height: 210px;
	max-width: 95vw;
	position: relative;
	top: 130px;
`
const Span = styled.div`
	color: #fff;
	position: relative;
	font-size: 1.5rem;
	text-align: center;
	margin: 50px 0 0;
	font-weight: 500;
	display: block;
	outline: none;
	border: none;
	-webkit-tap-highlight-color: transparent;
	-webkit-appearance: none;
	span {
		display: inline-block;
	}
`

const rand = (min, max) => Math.random() * (max - min) + min

const glitch = (el, cycles) => {
	if (cycles === 0 || cycles > 3) return
	gsap.set(el, {
		x: rand(-20, 20),
		y: rand(-20, 20),
		attr: { fill: ['#f4d339', '#df003f', '#111111'][cycles - 1] }
	})
	setTimeout(() => {
		gsap.set(el, { x: 0, y: 0, attr: { fill: '#fff' } })
		glitch(el, cycles - 1)
	}, rand(20, 100))
}

function Zuncho() {
	const wrap = useRef()
	const span = useRef()

	useEffect(() => {
		const titleLetters = Array.from(wrap.current.querySelectorAll('svg path'))

		gsap.fromTo(
			titleLetters,
			{ opacity: 0 },
			{
				ease: Expo.easeOut,
				startAt: { rotationX: -100, z: -1000 },
				opacity: 1,
				duration: 1.5,
				rotationX: 0,
				z: 0,
				stagger: 0.1
			}
		)

		gsap.fromTo(
			span.current,
			{ opacity: 0 },
			{
				opacity: 1,
				duration: 0.5
			}
		)

		const loop = startAt => {
			setTimeout(() => {
				const titleLettersShuffled = titleLetters.sort((a, b) => 0.5 - Math.random())
				const lettersSet = titleLettersShuffled.slice(0, rand(1, titleLetters.length + 1))
				for (let i = 0, len = lettersSet.length; i < len - 1; ++i) {
					glitch(lettersSet[i], 3)
				}
				loop()
			}, startAt || rand(500, 3000))
		}

		gsap.from(span.current.querySelectorAll('span'), {
			duration: 0.2,
			opacity: 0.1,
			scale: 0.7,
			delay: 0.2,
			// y: -15,
			ease: 'elastic.out(1, 0.3)',
			repeatDelay: 1,
			stagger: 0.2,
			repeat: -1
		})

		loop(1500)
		return () => {}
	}, [])

	return (
		<Outer>
			<div>
				<Wrap ref={wrap}>
					<svg
						enableBackground="new 0 0 650 210"
						version="1.1"
						viewBox="0 0 650 210"
						xmlSpace="preserve"
						xmlns="http://www.w3.org/2000/svg"
					>
						<path
							d="m104.7 112.8c-6.2 0.6-12.5 0.6-18.7 0.5-3.1 0-6.1-0.1-9.2-0.1-1.2 0-7.7-0.6-8.3 0.2 4.1-5.7 8.3-11.4 12.4-17 10.9-14.9 21.8-29.9 32.7-44.8 5.4-7.5 10.9-14.9 16.4-22.4 2.7-3.7 5.4-7.5 8.2-11.2 2.5-3.4 6.2-7.2 7.9-11-6.9-1.3-15.4-0.1-22.5-0.1h-22.2-43.9c-6 0-12.1 0-17.7 2-6.3 2.3-11.6 7-15.6 12.5s-6.9 11.4-9.7 17.6c17.7-5.7 36.5-6.5 54.9-6.2 3.1 0.1 6.3 0.1 9.4 0.2 1.1 0 7.8 0.9 8.3 0.3-26.9 35.3-53.8 70.7-80.7 106h92.8c5 0 10.2 0 14.8-2.2 5.4-2.6 9.1-7.8 12.3-12.9 1.3-2 2.5-4.1 3.7-6.2l-1.6-12.8c-7 4.6-15.6 6.8-23.7 7.6z"
							fill="#FFF"
						/>
						<path
							d="m345.4 117.8c-2.1 1.1-4.4 1.7-6.9 1.7s-4.4-0.7-5.7-2.1-2.1-3.7-2.6-6.7c-0.5-3.1-0.7-7.4-0.8-13v-18.6c0-13.2-2.6-23.2-7.7-29.9-5.1-6.8-13.6-10.2-25.3-10.2-4.8 0-9.4 0.9-13.7 2.9-4.3 1.9-8 4-11 6.3s-4.5 3.6-4.5 4.1v-12l-27.4 2.6v96.5h27.4v-69.4c0-0.2 0.9-1 2.7-2.6s4.1-2.9 6.9-4.2 5.7-1.9 9-1.9c6 0 10.1 2 12.5 6.1s3.6 10.4 3.6 19v19.8c0 10.5 2 19 5.9 25.6s11.1 9.9 21.7 9.9c4.7 0 8.9-1 12.8-3.1 3.9-2 7.1-4.3 9.7-6.7 0.6-0.6 1.2-1.1 1.6-1.6l-8-12.7c0.1 0 0 0.1-0.2 0.2z"
							fill="#FFF"
						/>
						<path
							d="m408.1 98.9c-0.6 6.2-2.3 11.1-5.2 14.9s-7.5 5.6-13.8 5.6c-7.3 0-12.3-2.6-15-7.9-2.8-5.3-4.2-12.4-4.2-21.2 0-5.5 0.5-10.3 1.4-14.4s2.8-7.6 5.6-10.4c2.9-2.8 7-4.1 12.3-4.1 5.8 0 10.2 1.8 13.2 5.3 2.9 3.5 4.8 8.4 5.7 14.6h27.1c0-16.4-4.5-27.5-13.6-33.4s-19.9-8.8-32.3-8.8c-8.9 0-16.8 1.2-23.6 3.7s-12.4 7.2-16.7 14.2-6.5 16.8-6.5 29.5v7.8c0 9.4 1.1 17.1 3.4 23.4l8 12.7c3.9 4.1 8.3 6.9 13.1 8.4 6.6 2 14 3 22.2 3 30.9 0 46.3-14.3 46.3-42.9h-27.4z"
							fill="#FFF"
						/>
						<path
							d="m235.5 117.5c-3 1.3-5.9 1.9-8.5 1.9s-4.5-0.9-5.9-2.6c-1.3-1.7-2.2-4.2-2.7-7.5s-0.7-7.8-0.7-13.5l-0.1-53.9h-27.4l0.1 56.9c0 5.3 0.1 9.2 0.2 11.8-2.3 2-4.1 3.4-5.3 4.4-1.2 0.9-3.1 1.9-5.5 3s-5.1 1.6-7.9 1.6c-4.1 0-7.3-0.9-9.6-2.7s-4-4.5-4.9-8.2c-1-3.6-1.5-8.4-1.5-14.2v-51.6l-17 9.7c-6.5 3.7-10.5 10.6-10.5 18.2v30.9c0 1.2 0 2.3 0.1 3.5l1.6 12.8c1.3 5.5 3.3 10 6 13.7 5.1 6.8 13.6 10.2 25.3 10.2 6 0 11.4-1 16.2-3s8.6-4.1 11.5-6.4 4.7-4 5.6-5.2c2 3.8 4.7 6.8 8 9 3.3 2.3 7.1 3.7 11.5 4.4 1.7 0.4 3.5 0.6 5.5 0.6 1.4 0 2.8-0.1 4.4-0.3 4.7-0.8 9.1-2.3 13.3-4.7 1-0.6 2-1.2 2.9-1.9v-19c-1.4 0.6-2.9 1.4-4.7 2.1z"
							fill="#FFF"
						/>
						<path
							d="m552.8 115c-1 0.9-2.1 1.7-3.4 2.5-2.1 1.3-4.5 2-7 2s-4.4-0.8-5.7-2.5-2.2-4.2-2.6-7.5-0.7-7.8-0.7-13.5v-16.9c0-13.2-2.6-23.2-7.7-29.9s-13.6-10.2-25.3-10.2c-4.7 0-9.2 0.9-13.5 2.7s-8 3.8-11 6-4.5 3.3-4.5 3.5v-45.1l-13.7 4.4c-8.2 2.6-13.8 10.3-13.8 18.9l0.1 109.8h27.4l-0.2-69.2c0.2-0.1 1.7-1.6 4.6-4.4s7.5-4.2 13.9-4.3c6 0 10.1 2.1 12.5 6.2s3.6 10.4 3.6 19v19.8c0 10.5 2 19 5.9 25.6s11.1 9.9 21.7 9.9c4.7 0 9-1.1 12.9-3.3 4-2.2 7.3-4.6 9.9-7.2l3.3-3.3 0.1 0.1-6.8-13.1v0z"
							fill="#FFF"
						/>
						<path
							d="m636.4 55.5c-4.8-7-10.6-11.5-17.2-13.5s-14-3-22.2-3c-8.9 0-16.8 1.2-23.6 3.7s-12.3 7.2-16.7 14.2c-4.3 7-6.5 16.8-6.5 29.5v7.8c0 8 0.8 14.9 2.5 20.6l6.8 13.1c4.4 5.4 9.5 9 15.2 10.7 6.6 2 14 3 22.2 3 8.9 0 16.8-1.2 23.6-3.7s12.3-7.2 16.7-14.1c4.3-6.9 6.5-16.7 6.5-29.4v-7.9c0-13.7-2.5-24-7.3-31zm-23.9 55.8c-2.6 5.4-7.8 8.1-15.5 8.1-7.3 0-12.3-2.6-15.2-7.9-2.8-5.3-4.3-12.4-4.3-21.2 0-8.5 1.3-15.5 3.9-20.9s7.8-8.1 15.5-8.1c7.3 0 12.3 2.6 15.2 7.9 2.8 5.3 4.3 12.3 4.3 21.1 0 8.6-1.3 15.6-3.9 21z"
							fill="#FFF"
						/>
						<g fill="#FFF">
							<path d="M155.3,203.4v-21.2l-9.1,13.9H146l-9-13.7v21h-7V171h7.7l8.5,13.7l8.5-13.7h7.7v32.4H155.3z" />
							<path d="m209.8 195.7c-0.7 1.8-1.6 3.3-2.9 4.6-1.2 1.2-2.7 2.1-4.5 2.7s-3.7 0.9-5.9 0.9c-4.4 0-7.8-1.2-10.3-3.6s-3.8-6-3.8-10.8v-18.5h7.1v18.4c0 2.7 0.6 4.7 1.9 6 1.2 1.3 3 2 5.1 2s3.9-0.6 5.1-2c1.2-1.3 1.9-3.2 1.9-5.8v-18.6h7.1v18.3c0.2 2.4-0.1 4.6-0.8 6.4z" />
							<path d="M231.1,203.4V171h7.1v26h16.2v6.4H231.1z" />
							<path d="m287.4 177.5v25.9h-7.1v-25.9h-9.9v-6.5h26.9v6.6h-9.9z" />
							<path d="M316.1,203.4V171h7.1v32.4H316.1z" />
							<path d="m369.7 203.4v-21.2l-9.1 13.9h-0.2l-9-13.7v21h-7v-32.4h7.7l8.5 13.7 8.4-13.7h7.7v32.4h-7z" />
							<path d="M397.5,203.4V171h24.4v6.4h-17.4v6.6h15.3v6.4h-15.3v6.8h17.6v6.4H397.5z" />
							<path d="m470.1 193.6c-0.8 2-2 3.7-3.5 5.1-1.5 1.5-3.3 2.6-5.5 3.4-2.1 0.8-4.4 1.3-7 1.3h-12.7v-32.4h12.7c2.5 0 4.9 0.4 7 1.2s3.9 2 5.5 3.4c1.5 1.5 2.7 3.2 3.5 5.1 0.8 2 1.3 4.1 1.3 6.4v0.1c0 2.3-0.4 4.4-1.3 6.4zm-6.2-6.4c0-1.4-0.2-2.7-0.7-3.9s-1.1-2.2-2-3.1c-0.8-0.9-1.9-1.5-3.1-2s-2.5-0.7-4-0.7h-5.5v19.5h5.5c1.5 0 2.8-0.2 4-0.7s2.2-1.1 3.1-2c0.8-0.9 1.5-1.9 2-3.1s0.7-2.5 0.7-4z" />
							<path d="M491,203.4V171h7.1v32.4H491z" />
							<path d="m543.4 203.4-3-7.3h-13.7l-3 7.3h-7.3l13.9-32.7h6.6l13.9 32.7h-7.4zm-9.8-24.1-4.3 10.5h8.6l-4.3-10.5z" />
						</g>
					</svg>
					<Span ref={span}>
						{'NEW WEB COMMING SOON...'.split('').map((l, i) => (
							<span key={'l' + i}> {l === ' ' ? <>&nbsp;</> : l}</span>
						))}
					</Span>
				</Wrap>
			</div>
		</Outer>
	)
}

export default Zuncho
